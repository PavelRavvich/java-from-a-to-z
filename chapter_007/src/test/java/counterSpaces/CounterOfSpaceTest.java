package counterSpaces;

import org.junit.Test;

public class CounterOfSpaceTest {
    @Test
    public void whenThen() {
        CounterOfSpace count = new CounterOfSpace(text, 10);
        count.startProgram();
    }

    private String text = "1. Модель работы Serial. Ключь: -XX:+UseSerialGC\n" +
            "Предполагает использование одного процессора. \n" +
            "Весь процесс в одном потоке.\n" +
            "1.1 Помеченный объект попадает в контейнер Yong Generation\n" +
            "1.2 Если какие-то объкты выжили в Yong Generation, то попадает в\n" +
            "контейнер Survivor Spaces, который состоит из 2 частей \"From\" и \"To\". \n" +
            "Сначала в From если кто-то выжил то он пападает в To. Если в To кто-то выжил,\n" +
            "он попадает в контейнер Old Generation\n" +
            "\n" +
            "2. Модель работы Parallel. Ключь: -XX:+UseParallelGC\n" +
            "Проедполагает использование нескольких процессоров, как результат выйгрыш в производительности,\n" +
            "но при этом затрачивается больше ресурсов. Работает как и Serial только в паралельных потоках\n" +
            "соответственно быстрее.\n" +
            "\n" +
            "3. Parallel Compacting Collector Работает так же как Parallel, но после высвобождения памяти, использует алгоритм Compaction(сжатие ячеек в нерпирывный ряд).\n" +
            "Клчь: -XX:+UseParalleOldGC\n" +
            "\n" +
            "4. Concurrent Mark Sweep Copmact Collector. Ключь: -XX:+UseConcMarkSweepGC.\n" +
            "Имеет самый меньший Stop The World Pause - быстрый отклик приложения.\n" +
            "\n" +
            "\n" +
            "Алгоритмы сбора мусора. (Просто алгоритмы может использоваться и в Serial и в Parallel)\n" +
            "\n" +
            "Поблоковый-паралельный режим Concurrent\n" +
            "1. Помечаем все объекты которые не имеют ссылок.\n" +
            "2. Помеченные переносятся в Yong Generation туда попадают локальные переменные \n" +
            "3. Проверка точно ли все эти обекты надо удалить \n" +
            "4. Высвобождение памяти.\n" +
            "В целом процесс получается дольше но нет состояний где мы блокируем состояние программы.\n" +
            "\n" +
            "\n" +
            "Остановка всего приложения. Алгоритм Stop the world.\n" +
            "1. Останавливаем выполнение программы и проверяем какие объекты не имеют внешних ссылок,\n" +
            "и удаляем их.\n" +
            "\n" +
            "Два варианта алгоритма после того как мы очистили память. (После!!!)\n" +
            "Олгаритм Compaction \n" +
            "1. Удаление объектов без ссылок.\n" +
            "2. Сжатие ячеек в один неприрывный ряд. (Типо дефрагминтации)\n" +
            "\n" +
            "\n" +
            "Олгаритм Non-Compaction \n" +
            "1. Удаление объектов без ссылок. Без сжатия, накладывает дополнительные\n" +
            "издержки на последующую запись в эти ячейки памяти.\n";
}